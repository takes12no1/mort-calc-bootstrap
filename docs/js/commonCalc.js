function buildMenu() {//specify div that houses menu
var $menuDiv = $("#menuContainer");
$menuDiv.html("");
var html = '<div id="accordion" class="panel-group">' +
	'<div class="panel panel-default">' +
	'<!--Begin Current Page Menu-->' +
	'<div class="panel-heading">' +
	'<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">' +
	'<h4 class="panel-title purchase">Calculators</h4>' +
	'</a>' +
	'</div>' +
	'<div id="collapseOne" class="panel-collapse collapse in">' +
	'<div class="list-group">' +
	'<a href="1mortgage-calculator.html" class="list-group-item">Mortgage Calculator-NEW</a>' +
		'<a href="mortgage-calculator.html" class="list-group-item">Mortgage Calculator(RT)</a>' +
		'<a href="should-i-refinance-my-mortgage.html" class="list-group-item">Should I Refinance My Mortgage(RT)</a>' +
		'<a href="should-i-rent-or-buy-a-home.html" class="list-group-item">Should I Rent Or Buy A Home(RT)</a>' +
		'<a href="how-much-home-can-i-afford.html" class="list-group-item">How Much Home Can I Afford(RT)</a>' +
		'<a href="tax-savings-generated-by-my-mortgage.html" class="list-group-item">Tax Savings Generated By My Mortgage(RT)</a>' +
		'<a href="comparing-mortgage-terms.html" class="list-group-item">Comparing Mortgage Terms(RT)</a>' +
		'<a href="impact-of-discount-points-interest-rates.html" class="list-group-item">Impact Of Discount Points Interest Rates(RT)</a>' +
		'<a href="fixed-vs-adjustable-mortgage.html" class="list-group-item">Fixed vs. Adjustable-Rate Mortgage(In Prog)</a>' +
		'<a href="adjustable-rate-mortgage-calculator.html" class="list-group-item">Adjustable Rate Mortgage Calculator(RT)</a>' +
		'<a href="loan-comparison-calculator.html" class="list-group-item">Loan Comparison Calculator(RT)</a>' +
		'<a href="converting-to-a-bi-weekly-payment-schedule.html" class="list-group-item">Converting To A Bi-Weekly Payment Schedule(RT)</a>' +
		'<a href="paying-extra-monthly-toward-your-principal.html" class="list-group-item">Paying Extra Monthly Toward Your Principal(RT)</a>' +
		'</div>' +
		'</div>' +
		'<!--end Current Page Menu-->' +
		'</div>' +
		'</div>';
	$menuDiv.html(html);
}
$(function() {
	buildMenu();
});

function formPercentageToFloatAsString(formPerc) {
	var percNum = parseFloat(formPerc, 10);
	var percNumFloat = (percNum / 100);
	var percNumFloat2String = percNumFloat.toString();
	return percNumFloat2String;
}

function formDecimalPercentageStringToNormalPercentage(formPerc) {
	var percNum = parseFloat(formPerc, 10);
	var percNumFloat = (percNum * 100);
	var percNumFloat2String = round(percNumFloat.toString(), 2);
	return percNumFloat2String;
}

function round(value, decimals) {
	return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
}

// enable all tooltips and popovers in document
$('[data-toggle="tooltip"]').tooltip();
$('[data-toggle="popover"]').popover();
$("a.tooltip").tooltip();


// Extend the default Number object with a formatMoney() method:
// usage: someVar.formatMoney(decimalPlaces, symbol, thousandsSeparator, decimalSeparator)
// defaults: (2, "$", ",", ".")
Number.prototype.formatMoney = function(places, symbol, thousand, decimal) {
	places = !isNaN(places = Math.abs(places)) ? places : 2;
	symbol = symbol !== undefined ? symbol : "$";
	thousand = thousand || ",";
	decimal = decimal || ".";
	var number = this,
		negative = number < 0 ? "-" : "",
		i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
		j = (j = i.length) > 3 ? j % 3 : 0;
	return symbol + negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
};

// Example usage:
//	formatMoney(54321);  $54,321
function formatMoney(number, places, symbol, thousand, decimal) {
	number = number || 0;
	places = !isNaN(places = Math.abs(places)) ? places : 2;
	symbol = symbol !== undefined ? symbol : "$";
	thousand = thousand || ",";
	decimal = decimal || ".";
	var negative = number < 0 ? "-" : "",
		i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
		j = (j = i.length) > 3 ? j % 3 : 0;
	return symbol + negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
}

// function changeResultsLocationOnMobile() {
// 	$('#resultContainer').insertBefore('#formContainer');
// }

// function changeResultsLocationOnTabletOrDesktop() {
// 	$('#formContainer').insertBefore('#resultsContainer');
// }

// if ($(window).width() <= 1024) {
// 	changeResultsLocationOnMobile();
// }

//$(window).resize(function() {
//		if( $(this).width() > width ) {
//			// code
//}
//});
